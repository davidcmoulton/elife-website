<?php
/**
 * @file
 * Code for the eLife: Article feature.
 */

include_once 'elife_article.features.inc';

define('ELIFE_ARTICLE_DOI_PREFIX', '10.7554/eLife.');

/**
 * Validate the doi string.
 *
 * @param $doi
 * @return bool
 */
function elife_article_validate_doi($doi) {
  $pattern = '/^' . preg_quote(ELIFE_ARTICLE_DOI_PREFIX, '/') . '[0-9]{5}(\.[0-9]+)?$/';
  $match = preg_match($pattern, $doi);
  if (empty($match)) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Verify that the apath string is unique.
 *
 * @param $apath
 * @param string $bundle
 * @return bool
 */
function elife_article_unique_apath($apath, $bundle = 'elife_article') {
  $nid = elife_article_from_apath($apath, FALSE, $bundle);

  if (!empty($nid)) {
    return FALSE;
  }

  return TRUE;
}

/**
 * Retrieve the article node or node id from the doi.
 *
 * @todo - elife - nlisgo - This may return multiple results.
 *
 * @param $doi
 * @param bool $load
 * @param string $bundle
 * @return bool|mixed
 */
function elife_article_from_doi($doi, $load = TRUE, $bundle = 'elife_article') {
  $doi_query = new EntityFieldQuery();
  $dois = $doi_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $bundle)
    ->fieldCondition('field_elife_a_doi', 'value', $doi, '=')
    // @todo - elife - nlisgo - perhaps only return the current version.
    ->execute();

  if (empty($dois['node'])) {
    return FALSE;
  }
  else {
    $node = array_shift($dois['node'])->nid;
    if ($load) {
      $node = node_load($node);
    }
  }

  return $node;
}

/**
 * Retrieve the article node or node id from the apath.
 *
 * @param $apath
 * @param bool $load
 * @param string $bundle
 * @return bool|mixed
 */
function elife_article_from_apath($apath, $load = TRUE, $bundle = 'elife_article') {
  $apath_query = new EntityFieldQuery();
  $apaths = $apath_query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $bundle)
    ->fieldCondition('field_elife_a_apath', 'value', $apath, '=')
    ->execute();

  if (empty($apaths['node'])) {
    return FALSE;
  }
  else {
    $node = array_shift($apaths['node'])->nid;
    if ($load) {
      $node = node_load($node);
    }
  }

  return $node;
}
