<?php
/**
 * @file
 * Code for the eLife - about.
 */

/**
 * Implements hook_menu().
 */
function elife_about_menu() {
  $items = array();
  $items['about'] = array(
    'description' => 'Preview the about content.',
    'page callback' => 'elife_about_page_load',
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_theme().
 */
function elife_about_theme($existing, $type, $theme, $path) {
  if ($type == 'module') {
    $templates = array(
      'elife_about' => array(
        'variables' => array(
          'profiles' => NULL,
        ),
        'template' => 'elife_about',
        'path' => drupal_get_path('module', 'elife_about') . '/templates',
      ),
      'elife_about_nav' => array(
        'variables' => array('profiles' => NULL),
        'template' => 'elife_about_nav',
        'path' => drupal_get_path('module', 'elife_about') . '/templates',
      ),
      'elife_profile_sheet' => array(
        'variables' => array(
          'id' => NULL,
          'title' => NULL,
          'sections' => array(),
        ),
        'template' => 'elife_profile_sheet',
        'path' => drupal_get_path('module', 'elife_about') . '/templates',
      ),
      'elife_profile_wrapper' => array(
        'variables' => array(
          'menu' => NULL,
          'leadership' => NULL,
          'regular' => NULL,
          'senior_editors_count' => NULL,
          'bre_count' => NULL,
        ),
        'template' => 'elife_profile_wrapper',
        'path' => drupal_get_path('module', 'elife_about') . '/templates',
      ),
    );
    return $templates;
  }
}

/**
 * Return the content for the about page in the elife_about template.
 *
 * @return string
 *   about page output
 */
function elife_about_page_load() {
  $path = drupal_get_path('module', 'elife_about');
  drupal_add_js($path . '/js/elife_about.js', array('scope' => 'footer'));
  drupal_add_css($path . '/css/about.css');
  $variables = [
    'profiles' => elife_about_profiles_load(),
  ];

  return theme('elife_about', $variables);
}

/**
 * Prepare the about for the about nav.
 */
function elife_about_nav_load() {
  $variables = array();

  return theme('elife_about_nav', $variables);
}

/**
 * Implements hook_page_alter().
 */
function elife_about_page_alter(&$page) {
  if (current_path() === 'about') {
    $page['page_top']['elife_about_nav'] = array(
      '#markup' => elife_about_nav_load(),
    );
  }
}

function elife_about_profiles_load() {
  $menu = [];

  $menu_li_class = ['aims-scope__subject_list_item'];
  $menu_a_class = ['aims-scope__subject_list_link'];
  $menu_a_id = 'menu-';

  $profiles['regular'] = '';
  $profiles['senior_editors_count'] = elife_person_profile_count_by_type('senior-editor');
  $profiles['bre_count'] = elife_person_profile_count_by_type('reviewing-editor');

  $leadership = elife_person_profile_get_view([
    'editor-in-chief',
    'deputy-editor',
  ]);
  $senior_editors = elife_person_profile_get_view('senior-editor');

  if (!empty($leadership) || !empty($senior_editors)) {
    $regular = [
      'sheet_id' => 'leadership',
      'sheet_title' => 'Leadership team',
      'sections' => [
        [
          'profiles' => $leadership,
        ],
        [
          'title' => t('Senior editors'),
          'title_id' => 'senior',
          'profiles' => $senior_editors,
        ],
      ],
    ];
    $profiles['regular'] .= theme('elife_profile_sheet', $regular);

    $menu[] = [
      'data' => l(t('Leadership team'), '', [
        'external' => TRUE,
        'fragment' => 'leadership',
        'attributes' => [
          'class' => $menu_a_class,
          'id' => $menu_a_id . 'leadership',
        ],
      ]),
      'class' => $menu_li_class,
    ];
  }

  if ($profiles['bre_count'] > 0) {
    $all_reviewing_editors = elife_person_profile_get_view('reviewing-editor');

    $label = 'All reviewing editors';
    $key = _elife_about_text_to_html_id($label);

    $regular = [
      'sheet_id' => $key,
      'sheet_title' => t($label),
      'sections' => [
        [
          'profiles' => $all_reviewing_editors,
        ],
      ],
    ];
    $profiles['regular'] .= theme('elife_profile_sheet', $regular);

    $menu[] = [
      'data' => l(t($label), '', [
        'external' => TRUE,
        'fragment' => $key,
        'attributes' => [
          'class' => $menu_a_class,
          'id' => $menu_a_id . $key,
        ],
      ]),
      'class' => $menu_li_class,
    ];
  }

  $expertises = taxonomy_vocabulary_machine_name_load('elife_pp_expertise');
  $expertises = taxonomy_get_tree($expertises->vid, 0, NULL, TRUE);

  foreach ($expertises as $expertise) {
    $senior_editors = elife_person_profile_get_view('senior-editor', FALSE, $expertise->tid);
    $reviewing_editors = elife_person_profile_get_view('reviewing-editor', FALSE, $expertise->tid);

    if (empty($senior_editors) && empty($reviewing_editors)) {
      continue;
    }

    $key = _elife_about_text_to_html_id($expertise->name);

    $regular = [
      'sheet_id' => $key,
      'sheet_title' => $expertise->field_elife_title[LANGUAGE_NONE][0]['safe_value'],
      'sections' => [
        [
          'title' => t('Senior editors'),
          'title_id' => 'senior',
          'profiles' => $senior_editors,
        ],
        [
          'title' => t('Reviewing editors'),
          'title_id' => 'reviewing',
          'profiles' => $reviewing_editors,
        ],
      ],
    ];
    $profiles['regular'] .= theme('elife_profile_sheet', $regular);

    $menu[] = [
      'data' => l($expertise->field_elife_title[LANGUAGE_NONE][0]['safe_value'], '', [
        'external' => TRUE,
        'fragment' => $key,
        'attributes' => [
          'class' => $menu_a_class,
          'id' => $menu_a_id . $key,
        ],
        'html' => TRUE,
      ]),
      'class' => $menu_li_class,
    ];
  }

  $past_senior_editors = elife_person_profile_get_view('senior-editor', TRUE);
  $past_reviewing_editors = elife_person_profile_get_view('reviewing-editor', TRUE);

  if (!empty($past_senior_editors) || !empty($past_reviewing_editors)) {
    $label = 'Past editors';
    $key = _elife_about_text_to_html_id($label);

    $regular = [
      'sheet_id' => $key,
      'sheet_title' => t($label),
      'sections' => [
        [
          'title' => t('Senior editors'),
          'title_id' => 'senior',
          'profiles' => $past_senior_editors,
        ],
        [
          'title' => t('Reviewing editors'),
          'title_id' => 'reviewing',
          'profiles' => $past_reviewing_editors,
        ],
      ],
    ];
    $profiles['regular'] .= theme('elife_profile_sheet', $regular);

    $menu[] = [
      'data' => l(t($label), '', [
        'external' => TRUE,
        'fragment' => $key,
        'attributes' => [
          'class' => $menu_a_class,
          'id' => $menu_a_id . $key,
        ],
      ]),
      'class' => $menu_li_class,
    ];
  }

  foreach (
    [
      'directors' => 'Board of Directors',
      'staff' => 'Executive staff',
    ]
    as $key => $label
  ) {
    $regular = [
      'sheet_id' => $key,
      'sheet_title' => $label,
      'sections' => [
        [
          'profiles' => elife_person_profile_get_view($key),
        ],
      ],
    ];
    if (!count($regular['sections'][0]['profiles'])) {
      continue;
    }

    $profiles['regular'] .= theme('elife_profile_sheet', $regular);

    $menu[] = [
      'data' => l($label, '', [
        'external' => TRUE,
        'fragment' => $key,
        'attributes' => [
          'class' => $menu_a_class,
          'id' => $menu_a_id . $key,
        ],
      ]),
      'class' => $menu_li_class,
    ];
  }

  $profiles['menu'] = theme('item_list', ['items' => $menu]);

  return theme('elife_profile_wrapper', $profiles);
}

/**
 * Implements hook_preprocess_html().
 */
function elife_about_preprocess_html(&$vars) {
  if (current_path() === 'about') {
    // @todo - elife - revisit this code using metatag

    // There is an issue with the HTML title not being set correctly.
    // This has been experienced on the about page.
    // This has been introduced since metatag module enabled.
    $title_vars = array(
      t('Communicating the latest advances in life science and biomedicine'),
      variable_get('site_name'),
    );

    $vars['head_title'] = implode(' | ', $title_vars);
    $vars['head_title_array']['name'] = $title_vars[1];
    $vars['head_title_array']['slogan'] = $title_vars[0];
  }
}

function _elife_about_text_to_html_id($text) {
  $ids = &drupal_static(__FUNCTION__);

  if (!isset($ids)) {
    $ids = [];
  }

  if (!isset($ids[$text])) {
    $ids[$text] = str_replace('_', '-', strtolower(transliteration_clean_filename($text)));
  }

  return $ids[$text];
}
