<?php
/**
 * @file
 * Code for the eLife: Category Assets feature.
 */

include_once 'elife_category_assets.features.inc';

/**
 * Implements hook_taxonomy_term_insert().
 */
function elife_category_assets_taxonomy_term_insert($term) {
  $categories_vocabulary = taxonomy_vocabulary_machine_name_load('elife_categories');
  if ($term->vid == $categories_vocabulary->vid) {
    /* @var EntityDrupalWrapper $ewrapper */
    $ewrapper = entity_metadata_wrapper('taxonomy_term', $term);
    if ($ewrapper->field_elife_category_type->value() == 'display-channel') {
      elife_category_assets_display_channel_weights();
    }
  }
}

/**
 * Allocate predefined weight to display channel taxonomy terms.
 */
function elife_category_assets_display_channel_weights() {
  if ($categories_vocabulary = taxonomy_vocabulary_machine_name_load('elife_categories')) {
    $stored_weights = elife_category_assets_display_channel_stored_weights();
    if (!empty($stored_weights)) {
      $efq = new EntityFieldQuery();
      $result = $efq->entityCondition('entity_type', 'taxonomy_term')
        ->propertyCondition('vid', $categories_vocabulary->vid)
        ->fieldCondition('field_elife_category_type', 'value', 'display-channel', '=')
        ->execute();
      if (!empty($result['taxonomy_term'])) {
        $terms = taxonomy_term_load_multiple(array_keys($result['taxonomy_term']));
        foreach ($terms as $term) {
          $weight = (isset($stored_weights[$term->name])) ? $stored_weights[$term->name] : 0;
          $term->weight = $weight;
          taxonomy_term_save($term);
        }
      }
    }
  }
}

/**
 * Stored weights for category terms.
 */
function elife_category_assets_display_channel_stored_weights() {
  $stored_weights = array();
  $term_weights = variable_get('elife_category_assets_weight', array());
  if (!empty($term_weights)) {
    foreach ($term_weights as $key => $term_name) {
      $stored_weights[$term_name] = $key - count($term_weights);
    }
  }

  return $stored_weights;
}
